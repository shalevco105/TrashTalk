// Generated by view binder compiler. Do not edit!
package trashTalk.apps.trashTalk.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import trashTalk.apps.trashTalk.R;

public final class FragmentLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button linkToSignUp;

  @NonNull
  public final Button loginBtn;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final EditText userEmail;

  @NonNull
  public final EditText userPassword;

  private FragmentLoginBinding(@NonNull ConstraintLayout rootView, @NonNull Button linkToSignUp,
      @NonNull Button loginBtn, @NonNull ProgressBar progressBar, @NonNull EditText userEmail,
      @NonNull EditText userPassword) {
    this.rootView = rootView;
    this.linkToSignUp = linkToSignUp;
    this.loginBtn = loginBtn;
    this.progressBar = progressBar;
    this.userEmail = userEmail;
    this.userPassword = userPassword;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.linkToSignUp;
      Button linkToSignUp = ViewBindings.findChildViewById(rootView, id);
      if (linkToSignUp == null) {
        break missingId;
      }

      id = R.id.login_btn;
      Button loginBtn = ViewBindings.findChildViewById(rootView, id);
      if (loginBtn == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.userEmail;
      EditText userEmail = ViewBindings.findChildViewById(rootView, id);
      if (userEmail == null) {
        break missingId;
      }

      id = R.id.userPassword;
      EditText userPassword = ViewBindings.findChildViewById(rootView, id);
      if (userPassword == null) {
        break missingId;
      }

      return new FragmentLoginBinding((ConstraintLayout) rootView, linkToSignUp, loginBtn,
          progressBar, userEmail, userPassword);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
