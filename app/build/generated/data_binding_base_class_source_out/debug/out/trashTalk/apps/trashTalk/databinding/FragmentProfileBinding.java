// Generated by view binder compiler. Do not edit!
package trashTalk.apps.trashTalk.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import trashTalk.apps.trashTalk.R;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText nicknameEdit;

  @NonNull
  public final Button saveBtn;

  @NonNull
  public final ProgressBar saveUserProgressBar;

  @NonNull
  public final TextView showcaseUserEmail;

  @NonNull
  public final ImageView showcaseUserProfileImage;

  @NonNull
  public final TextView textView4;

  private FragmentProfileBinding(@NonNull ConstraintLayout rootView, @NonNull EditText nicknameEdit,
      @NonNull Button saveBtn, @NonNull ProgressBar saveUserProgressBar,
      @NonNull TextView showcaseUserEmail, @NonNull ImageView showcaseUserProfileImage,
      @NonNull TextView textView4) {
    this.rootView = rootView;
    this.nicknameEdit = nicknameEdit;
    this.saveBtn = saveBtn;
    this.saveUserProgressBar = saveUserProgressBar;
    this.showcaseUserEmail = showcaseUserEmail;
    this.showcaseUserProfileImage = showcaseUserProfileImage;
    this.textView4 = textView4;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.nicknameEdit;
      EditText nicknameEdit = ViewBindings.findChildViewById(rootView, id);
      if (nicknameEdit == null) {
        break missingId;
      }

      id = R.id.saveBtn;
      Button saveBtn = ViewBindings.findChildViewById(rootView, id);
      if (saveBtn == null) {
        break missingId;
      }

      id = R.id.saveUserProgressBar;
      ProgressBar saveUserProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (saveUserProgressBar == null) {
        break missingId;
      }

      id = R.id.showcaseUserEmail;
      TextView showcaseUserEmail = ViewBindings.findChildViewById(rootView, id);
      if (showcaseUserEmail == null) {
        break missingId;
      }

      id = R.id.showcaseUserProfileImage;
      ImageView showcaseUserProfileImage = ViewBindings.findChildViewById(rootView, id);
      if (showcaseUserProfileImage == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      return new FragmentProfileBinding((ConstraintLayout) rootView, nicknameEdit, saveBtn,
          saveUserProgressBar, showcaseUserEmail, showcaseUserProfileImage, textView4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
