// Generated by view binder compiler. Do not edit!
package trashTalk.apps.trashTalk.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import trashTalk.apps.trashTalk.R;

public final class UserTrashLayoutRowBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton deleteTrashButton;

  @NonNull
  public final ImageButton editTrashButton;

  @NonNull
  public final ImageView imageViewUserTrash;

  @NonNull
  public final TextView lvUserTrashListName;

  private UserTrashLayoutRowBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton deleteTrashButton, @NonNull ImageButton editTrashButton,
      @NonNull ImageView imageViewUserTrash, @NonNull TextView lvUserTrashListName) {
    this.rootView = rootView;
    this.deleteTrashButton = deleteTrashButton;
    this.editTrashButton = editTrashButton;
    this.imageViewUserTrash = imageViewUserTrash;
    this.lvUserTrashListName = lvUserTrashListName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UserTrashLayoutRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UserTrashLayoutRowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.user_trash_layout_row, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UserTrashLayoutRowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.deleteTrashButton;
      ImageButton deleteTrashButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteTrashButton == null) {
        break missingId;
      }

      id = R.id.editTrashButton;
      ImageButton editTrashButton = ViewBindings.findChildViewById(rootView, id);
      if (editTrashButton == null) {
        break missingId;
      }

      id = R.id.imageViewUserTrash;
      ImageView imageViewUserTrash = ViewBindings.findChildViewById(rootView, id);
      if (imageViewUserTrash == null) {
        break missingId;
      }

      id = R.id.lvUserTrashListName;
      TextView lvUserTrashListName = ViewBindings.findChildViewById(rootView, id);
      if (lvUserTrashListName == null) {
        break missingId;
      }

      return new UserTrashLayoutRowBinding((ConstraintLayout) rootView, deleteTrashButton,
          editTrashButton, imageViewUserTrash, lvUserTrashListName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
